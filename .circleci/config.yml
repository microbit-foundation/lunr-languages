version: 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: cimg/node:14.19

_steps:
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      keys:
        - npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - npm-v1-{{ .Branch }}-
        - npm-v1-
  save_npm_cache: &save_npm_cache
    save_cache:
      paths:
        - .npm-cache
      key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
  configure_registry_auth: &configure_registry_auth
    run:
      name: Configure registry auth
      # Alternative for public packages via npmjs registry:
      # command: echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" >> ~/repo/.npmrc
      command: echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/repo/.npmrc

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run: git submodule update --init
      - *restore_npm_cache
      - *configure_registry_auth
      - run: npm ci --cache .npm-cache
      - run:
          name: Run tests
          command: npm run build && npm run test
      - persist_to_workspace:
          root: ~/repo
          paths: .
      - *save_npm_cache
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - *configure_registry_auth
      - run:
          name: Publish package
          # Alternative to publish every master build with the `next` tag.
          # Change the workflow below to deploy on master too via `only: master`
          command: npm publish $(if [ -z "$CIRCLE_TAG" ]; then echo "--tag next"; fi)

workflows:
  version: 2
  test-deploy:
    jobs:
      - test:
          context:
            - "GitHub Packages Read"
          filters:
            tags:
              only: /^v.*/
      - deploy:
          context:
            - "GitHub Packages Write"
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: microbit
